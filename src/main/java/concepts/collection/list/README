A List is an ordered Collection (sometimes called a sequence). Lists may contain duplicate elements. 

In addition to the operations inherited from Collection, the List interface includes operations for the following:

* Positional access: manipulates elements based on their numerical position in the list. 
					  This includes methods such as get, set, add, addAll, and remove.
* Search: searches for a specified object in the list and returns its numerical position. 
		   Search methods include indexOf and lastIndexOf.
* Iteration: extends Iterator semantics to take advantage of the list's sequential nature. 
			  The listIterator methods provide this behavior.
* Range-view: The sublist method performs arbitrary range operations on the list.


The Java platform contains two general-purpose List implementations. 

* ArrayList, which is usually the better-performing implementation.
* LinkedList which offers better performance under certain circumstances.

Refer the sample program
 * ArrayList - UnderstandArrayList.java
 * LinkedList - UnderstandLinkedList.java